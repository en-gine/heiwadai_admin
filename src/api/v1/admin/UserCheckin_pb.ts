// @generated by protoc-gen-es v1.4.2 with parameter "target=ts"
// @generated from file v1/admin/UserCheckin.proto (package server.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Pager, PageResponse } from "../shared/Pager_pb.js";

/**
 * @generated from message server.admin.CheckinData
 */
export class CheckinData extends Message<CheckinData> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  /**
   * @generated from field: string StoreID = 2;
   */
  StoreID = "";

  /**
   * @generated from field: string StoreName = 3;
   */
  StoreName = "";

  /**
   * @generated from field: string StoreBranchName = 4;
   */
  StoreBranchName = "";

  /**
   * @generated from field: string UserID = 5;
   */
  UserID = "";

  /**
   * @generated from field: string UserFirstName = 6;
   */
  UserFirstName = "";

  /**
   * @generated from field: string UserLastName = 7;
   */
  UserLastName = "";

  /**
   * @generated from field: optional google.protobuf.Timestamp CheckinAt = 8;
   */
  CheckinAt?: Timestamp;

  /**
   * @generated from field: bool IsArchive = 9;
   */
  IsArchive = false;

  constructor(data?: PartialMessage<CheckinData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.CheckinData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "StoreID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "StoreName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "StoreBranchName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "UserID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "UserFirstName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "UserLastName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "CheckinAt", kind: "message", T: Timestamp, opt: true },
    { no: 9, name: "IsArchive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckinData {
    return new CheckinData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckinData {
    return new CheckinData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckinData {
    return new CheckinData().fromJsonString(jsonString, options);
  }

  static equals(a: CheckinData | PlainMessage<CheckinData> | undefined, b: CheckinData | PlainMessage<CheckinData> | undefined): boolean {
    return proto3.util.equals(CheckinData, a, b);
  }
}

/**
 * @generated from message server.admin.CheckinsResponse
 */
export class CheckinsResponse extends Message<CheckinsResponse> {
  /**
   * @generated from field: repeated server.admin.CheckinData Checkins = 1;
   */
  Checkins: CheckinData[] = [];

  /**
   * @generated from field: optional server.shared.PageResponse PageResponse = 2;
   */
  PageResponse?: PageResponse;

  constructor(data?: PartialMessage<CheckinsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.CheckinsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Checkins", kind: "message", T: CheckinData, repeated: true },
    { no: 2, name: "PageResponse", kind: "message", T: PageResponse, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckinsResponse {
    return new CheckinsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckinsResponse {
    return new CheckinsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckinsResponse {
    return new CheckinsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CheckinsResponse | PlainMessage<CheckinsResponse> | undefined, b: CheckinsResponse | PlainMessage<CheckinsResponse> | undefined): boolean {
    return proto3.util.equals(CheckinsResponse, a, b);
  }
}

/**
 * @generated from message server.admin.GetRecentAllCheckinRequest
 */
export class GetRecentAllCheckinRequest extends Message<GetRecentAllCheckinRequest> {
  /**
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  constructor(data?: PartialMessage<GetRecentAllCheckinRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.GetRecentAllCheckinRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRecentAllCheckinRequest {
    return new GetRecentAllCheckinRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRecentAllCheckinRequest {
    return new GetRecentAllCheckinRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRecentAllCheckinRequest {
    return new GetRecentAllCheckinRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRecentAllCheckinRequest | PlainMessage<GetRecentAllCheckinRequest> | undefined, b: GetRecentAllCheckinRequest | PlainMessage<GetRecentAllCheckinRequest> | undefined): boolean {
    return proto3.util.equals(GetRecentAllCheckinRequest, a, b);
  }
}

/**
 * @generated from message server.admin.UserCheckinRequest
 */
export class UserCheckinRequest extends Message<UserCheckinRequest> {
  /**
   * @generated from field: string UserID = 1;
   */
  UserID = "";

  /**
   * @generated from field: server.shared.Pager Pager = 2;
   */
  Pager?: Pager;

  constructor(data?: PartialMessage<UserCheckinRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.UserCheckinRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "UserID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Pager", kind: "message", T: Pager },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserCheckinRequest {
    return new UserCheckinRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserCheckinRequest {
    return new UserCheckinRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserCheckinRequest {
    return new UserCheckinRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UserCheckinRequest | PlainMessage<UserCheckinRequest> | undefined, b: UserCheckinRequest | PlainMessage<UserCheckinRequest> | undefined): boolean {
    return proto3.util.equals(UserCheckinRequest, a, b);
  }
}

