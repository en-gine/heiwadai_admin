// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/admin/Coupon.proto (package server.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Pager, PageResponse } from "../shared/Pager_pb.ts";
import { Coupon, UserAttachedCoupon } from "../shared/Coupon_pb.ts";

/**
 * @generated from message server.admin.CouponIDRequest
 */
export class CouponIDRequest extends Message<CouponIDRequest> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  constructor(data?: PartialMessage<CouponIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.CouponIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CouponIDRequest {
    return new CouponIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CouponIDRequest {
    return new CouponIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CouponIDRequest {
    return new CouponIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CouponIDRequest | PlainMessage<CouponIDRequest> | undefined, b: CouponIDRequest | PlainMessage<CouponIDRequest> | undefined): boolean {
    return proto3.util.equals(CouponIDRequest, a, b);
  }
}

/**
 * @generated from message server.admin.UserCouponRequest
 */
export class UserCouponRequest extends Message<UserCouponRequest> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  /**
   * @generated from field: server.shared.Pager Pager = 2;
   */
  Pager?: Pager;

  constructor(data?: PartialMessage<UserCouponRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.UserCouponRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Pager", kind: "message", T: Pager },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserCouponRequest {
    return new UserCouponRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserCouponRequest {
    return new UserCouponRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserCouponRequest {
    return new UserCouponRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UserCouponRequest | PlainMessage<UserCouponRequest> | undefined, b: UserCouponRequest | PlainMessage<UserCouponRequest> | undefined): boolean {
    return proto3.util.equals(UserCouponRequest, a, b);
  }
}

/**
 * @generated from message server.admin.CreateCustomCouponRequest
 */
export class CreateCustomCouponRequest extends Message<CreateCustomCouponRequest> {
  /**
   * @generated from field: string Name = 1;
   */
  Name = "";

  /**
   * @generated from field: uint32 DiscountAmount = 2;
   */
  DiscountAmount = 0;

  /**
   * @generated from field: google.protobuf.Timestamp ExpireAt = 3;
   */
  ExpireAt?: Timestamp;

  /**
   * @generated from field: bool IsCombinationable = 4;
   */
  IsCombinationable = false;

  /**
   * @generated from field: repeated string Notices = 5;
   */
  Notices: string[] = [];

  /**
   * @generated from field: repeated string TargetStoresID = 6;
   */
  TargetStoresID: string[] = [];

  constructor(data?: PartialMessage<CreateCustomCouponRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.CreateCustomCouponRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "DiscountAmount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "ExpireAt", kind: "message", T: Timestamp },
    { no: 4, name: "IsCombinationable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "Notices", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "TargetStoresID", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateCustomCouponRequest {
    return new CreateCustomCouponRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateCustomCouponRequest {
    return new CreateCustomCouponRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateCustomCouponRequest {
    return new CreateCustomCouponRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateCustomCouponRequest | PlainMessage<CreateCustomCouponRequest> | undefined, b: CreateCustomCouponRequest | PlainMessage<CreateCustomCouponRequest> | undefined): boolean {
    return proto3.util.equals(CreateCustomCouponRequest, a, b);
  }
}

/**
 * @generated from message server.admin.AffectedCountResponse
 */
export class AffectedCountResponse extends Message<AffectedCountResponse> {
  /**
   * @generated from field: uint32 AffectedUserCount = 1;
   */
  AffectedUserCount = 0;

  constructor(data?: PartialMessage<AffectedCountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.AffectedCountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "AffectedUserCount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AffectedCountResponse {
    return new AffectedCountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AffectedCountResponse {
    return new AffectedCountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AffectedCountResponse {
    return new AffectedCountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AffectedCountResponse | PlainMessage<AffectedCountResponse> | undefined, b: AffectedCountResponse | PlainMessage<AffectedCountResponse> | undefined): boolean {
    return proto3.util.equals(AffectedCountResponse, a, b);
  }
}

/**
 * @generated from message server.admin.UserAttachedCouponsResponse
 */
export class UserAttachedCouponsResponse extends Message<UserAttachedCouponsResponse> {
  /**
   * @generated from field: repeated server.shared.UserAttachedCoupon UserAttachedCoupons = 1;
   */
  UserAttachedCoupons: UserAttachedCoupon[] = [];

  /**
   * @generated from field: server.shared.PageResponse PageResponse = 2;
   */
  PageResponse?: PageResponse;

  constructor(data?: PartialMessage<UserAttachedCouponsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.UserAttachedCouponsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "UserAttachedCoupons", kind: "message", T: UserAttachedCoupon, repeated: true },
    { no: 2, name: "PageResponse", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAttachedCouponsResponse {
    return new UserAttachedCouponsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAttachedCouponsResponse {
    return new UserAttachedCouponsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAttachedCouponsResponse {
    return new UserAttachedCouponsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UserAttachedCouponsResponse | PlainMessage<UserAttachedCouponsResponse> | undefined, b: UserAttachedCouponsResponse | PlainMessage<UserAttachedCouponsResponse> | undefined): boolean {
    return proto3.util.equals(UserAttachedCouponsResponse, a, b);
  }
}

/**
 * @generated from message server.admin.CouponListResponse
 */
export class CouponListResponse extends Message<CouponListResponse> {
  /**
   * @generated from field: repeated server.shared.Coupon Coupons = 1;
   */
  Coupons: Coupon[] = [];

  /**
   * @generated from field: server.shared.PageResponse PageResponse = 2;
   */
  PageResponse?: PageResponse;

  constructor(data?: PartialMessage<CouponListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.CouponListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Coupons", kind: "message", T: Coupon, repeated: true },
    { no: 2, name: "PageResponse", kind: "message", T: PageResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CouponListResponse {
    return new CouponListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CouponListResponse {
    return new CouponListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CouponListResponse {
    return new CouponListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CouponListResponse | PlainMessage<CouponListResponse> | undefined, b: CouponListResponse | PlainMessage<CouponListResponse> | undefined): boolean {
    return proto3.util.equals(CouponListResponse, a, b);
  }
}

/**
 * @generated from message server.admin.SaveCustomCouponRequest
 */
export class SaveCustomCouponRequest extends Message<SaveCustomCouponRequest> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  /**
   * @generated from field: string Name = 2;
   */
  Name = "";

  /**
   * @generated from field: uint32 DiscountAmount = 3;
   */
  DiscountAmount = 0;

  /**
   * @generated from field: google.protobuf.Timestamp ExpireAt = 4;
   */
  ExpireAt?: Timestamp;

  /**
   * @generated from field: bool IsCombinationable = 5;
   */
  IsCombinationable = false;

  /**
   * @generated from field: repeated string Notices = 6;
   */
  Notices: string[] = [];

  /**
   * @generated from field: repeated string TargetStoresID = 7;
   */
  TargetStoresID: string[] = [];

  constructor(data?: PartialMessage<SaveCustomCouponRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.SaveCustomCouponRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "DiscountAmount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "ExpireAt", kind: "message", T: Timestamp },
    { no: 5, name: "IsCombinationable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "Notices", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "TargetStoresID", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SaveCustomCouponRequest {
    return new SaveCustomCouponRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SaveCustomCouponRequest {
    return new SaveCustomCouponRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SaveCustomCouponRequest {
    return new SaveCustomCouponRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SaveCustomCouponRequest | PlainMessage<SaveCustomCouponRequest> | undefined, b: SaveCustomCouponRequest | PlainMessage<SaveCustomCouponRequest> | undefined): boolean {
    return proto3.util.equals(SaveCustomCouponRequest, a, b);
  }
}

