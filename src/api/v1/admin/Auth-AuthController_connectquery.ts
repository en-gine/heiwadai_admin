// @generated by protoc-gen-connect-query v1.1.2 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/admin/Auth.proto (package server.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { AdminAuthTokenResponse, AdminRefreshTokenRequest, AdminRegisterRequest, AdminRegisterResponse, ResendInviteRequest, UpdateEmailRequest, UpdatePasswordRequest } from "./Auth_pb.ts";

/**
 * トークン必要
 *
 * @generated from rpc server.admin.AuthController.SignOut
 */
export const signOut = {
  localName: "signOut",
  name: "SignOut",
  kind: MethodKind.Unary,
  I: Empty,
  O: Empty,
  service: {
    typeName: "server.admin.AuthController"
  }
} as const;

/**
 * @generated from rpc server.admin.AuthController.Refresh
 */
export const refresh = {
  localName: "refresh",
  name: "Refresh",
  kind: MethodKind.Unary,
  I: AdminRefreshTokenRequest,
  O: AdminAuthTokenResponse,
  service: {
    typeName: "server.admin.AuthController"
  }
} as const;

/**
 * @generated from rpc server.admin.AuthController.UpdatePassword
 */
export const updatePassword = {
  localName: "updatePassword",
  name: "UpdatePassword",
  kind: MethodKind.Unary,
  I: UpdatePasswordRequest,
  O: Empty,
  service: {
    typeName: "server.admin.AuthController"
  }
} as const;

/**
 * @generated from rpc server.admin.AuthController.UpdateEmail
 */
export const updateEmail = {
  localName: "updateEmail",
  name: "UpdateEmail",
  kind: MethodKind.Unary,
  I: UpdateEmailRequest,
  O: Empty,
  service: {
    typeName: "server.admin.AuthController"
  }
} as const;

/**
 * @generated from rpc server.admin.AuthController.Register
 */
export const register = {
  localName: "register",
  name: "Register",
  kind: MethodKind.Unary,
  I: AdminRegisterRequest,
  O: AdminRegisterResponse,
  service: {
    typeName: "server.admin.AuthController"
  }
} as const;

/**
 * @generated from rpc server.admin.AuthController.ResendInviteMail
 */
export const resendInviteMail = {
  localName: "resendInviteMail",
  name: "ResendInviteMail",
  kind: MethodKind.Unary,
  I: ResendInviteRequest,
  O: Empty,
  service: {
    typeName: "server.admin.AuthController"
  }
} as const;
