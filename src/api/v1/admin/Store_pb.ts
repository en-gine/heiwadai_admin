// @generated by protoc-gen-es v1.10.1 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/admin/Store.proto (package server.admin, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message server.admin.Store
 */
export class Store extends Message<Store> {
  /**
   * uuid.UUID
   *
   * @generated from field: string ID = 1;
   */
  ID = "";

  /**
   * @generated from field: string Name = 2;
   */
  Name = "";

  /**
   * @generated from field: optional string BranchName = 3;
   */
  BranchName?: string;

  /**
   * @generated from field: string ZipCode = 4;
   */
  ZipCode = "";

  /**
   * @generated from field: string Address = 5;
   */
  Address = "";

  /**
   * @generated from field: string Tel = 6;
   */
  Tel = "";

  /**
   * @generated from field: string SiteURL = 7;
   */
  SiteURL = "";

  /**
   * @generated from field: string StampImageURL = 8;
   */
  StampImageURL = "";

  /**
   * @generated from field: bool Stayable = 9;
   */
  Stayable = false;

  /**
   * @generated from field: bool IsActive = 10;
   */
  IsActive = false;

  /**
   * uuid.UUID
   *
   * @generated from field: string QRCode = 11;
   */
  QRCode = "";

  /**
   * uuid.UUID
   *
   * @generated from field: string UnLimitedQRCode = 12;
   */
  UnLimitedQRCode = "";

  /**
   * @generated from field: optional server.admin.StayableStoreInfo StayableInfo = 13;
   */
  StayableInfo?: StayableStoreInfo;

  constructor(data?: PartialMessage<Store>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.Store";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "BranchName", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "ZipCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "Address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "Tel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "SiteURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "StampImageURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "Stayable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "IsActive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "QRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "UnLimitedQRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "StayableInfo", kind: "message", T: StayableStoreInfo, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Store {
    return new Store().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Store {
    return new Store().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Store {
    return new Store().fromJsonString(jsonString, options);
  }

  static equals(a: Store | PlainMessage<Store> | undefined, b: Store | PlainMessage<Store> | undefined): boolean {
    return proto3.util.equals(Store, a, b);
  }
}

/**
 * @generated from message server.admin.Stores
 */
export class Stores extends Message<Stores> {
  /**
   * @generated from field: repeated server.admin.Store Stores = 1;
   */
  Stores: Store[] = [];

  constructor(data?: PartialMessage<Stores>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.Stores";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Stores", kind: "message", T: Store, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Stores {
    return new Stores().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Stores {
    return new Stores().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Stores {
    return new Stores().fromJsonString(jsonString, options);
  }

  static equals(a: Stores | PlainMessage<Stores> | undefined, b: Stores | PlainMessage<Stores> | undefined): boolean {
    return proto3.util.equals(Stores, a, b);
  }
}

/**
 * @generated from message server.admin.StoreRegisterRequest
 */
export class StoreRegisterRequest extends Message<StoreRegisterRequest> {
  /**
   * @generated from field: string Name = 1;
   */
  Name = "";

  /**
   * @generated from field: optional string BranchName = 2;
   */
  BranchName?: string;

  /**
   * @generated from field: string ZipCode = 3;
   */
  ZipCode = "";

  /**
   * @generated from field: string Address = 4;
   */
  Address = "";

  /**
   * @generated from field: string Tel = 5;
   */
  Tel = "";

  /**
   * @generated from field: string SiteURL = 6;
   */
  SiteURL = "";

  /**
   * @generated from field: string StampImageData = 7;
   */
  StampImageData = "";

  /**
   * @generated from field: bool Stayable = 8;
   */
  Stayable = false;

  /**
   * @generated from field: bool IsActive = 9;
   */
  IsActive = false;

  /**
   * @generated from field: string QRCode = 10;
   */
  QRCode = "";

  /**
   * @generated from field: string UnLimitedQRCode = 11;
   */
  UnLimitedQRCode = "";

  /**
   * @generated from field: optional server.admin.StayableStoreInfo StayableInfo = 12;
   */
  StayableInfo?: StayableStoreInfo;

  constructor(data?: PartialMessage<StoreRegisterRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.StoreRegisterRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "BranchName", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "ZipCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "Address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "Tel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "SiteURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "StampImageData", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "Stayable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "IsActive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "QRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "UnLimitedQRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "StayableInfo", kind: "message", T: StayableStoreInfo, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StoreRegisterRequest {
    return new StoreRegisterRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StoreRegisterRequest {
    return new StoreRegisterRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StoreRegisterRequest {
    return new StoreRegisterRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StoreRegisterRequest | PlainMessage<StoreRegisterRequest> | undefined, b: StoreRegisterRequest | PlainMessage<StoreRegisterRequest> | undefined): boolean {
    return proto3.util.equals(StoreRegisterRequest, a, b);
  }
}

/**
 * @generated from message server.admin.StoreUpdateRequest
 */
export class StoreUpdateRequest extends Message<StoreUpdateRequest> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  /**
   * @generated from field: string Name = 2;
   */
  Name = "";

  /**
   * @generated from field: optional string BranchName = 3;
   */
  BranchName?: string;

  /**
   * @generated from field: string ZipCode = 4;
   */
  ZipCode = "";

  /**
   * @generated from field: string Address = 5;
   */
  Address = "";

  /**
   * @generated from field: string Tel = 6;
   */
  Tel = "";

  /**
   * @generated from field: string SiteURL = 7;
   */
  SiteURL = "";

  /**
   * @generated from field: string StampImageData = 8;
   */
  StampImageData = "";

  /**
   * @generated from field: bool Stayable = 9;
   */
  Stayable = false;

  /**
   * @generated from field: bool IsActive = 10;
   */
  IsActive = false;

  /**
   * @generated from field: string QRCode = 11;
   */
  QRCode = "";

  /**
   * @generated from field: string UnLimitedQRCode = 12;
   */
  UnLimitedQRCode = "";

  /**
   * @generated from field: server.admin.StayableStoreInfo StayableInfo = 13;
   */
  StayableInfo?: StayableStoreInfo;

  constructor(data?: PartialMessage<StoreUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.StoreUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "BranchName", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "ZipCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "Address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "Tel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "SiteURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "StampImageData", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "Stayable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 10, name: "IsActive", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 11, name: "QRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "UnLimitedQRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "StayableInfo", kind: "message", T: StayableStoreInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StoreUpdateRequest {
    return new StoreUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StoreUpdateRequest {
    return new StoreUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StoreUpdateRequest {
    return new StoreUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StoreUpdateRequest | PlainMessage<StoreUpdateRequest> | undefined, b: StoreUpdateRequest | PlainMessage<StoreUpdateRequest> | undefined): boolean {
    return proto3.util.equals(StoreUpdateRequest, a, b);
  }
}

/**
 * @generated from message server.admin.StayableStoreInfo
 */
export class StayableStoreInfo extends Message<StayableStoreInfo> {
  /**
   * @generated from field: string Parking = 1;
   */
  Parking = "";

  /**
   * @generated from field: double Latitude = 2;
   */
  Latitude = 0;

  /**
   * @generated from field: double Longitude = 3;
   */
  Longitude = 0;

  /**
   * @generated from field: string AccessInfo = 4;
   */
  AccessInfo = "";

  /**
   * @generated from field: string RestAPIURL = 5;
   */
  RestAPIURL = "";

  /**
   * @generated from field: string BookingSystemID = 6;
   */
  BookingSystemID = "";

  /**
   * @generated from field: string BookingSystemLoginId = 7;
   */
  BookingSystemLoginId = "";

  /**
   * @generated from field: string BookingSystemPassword = 8;
   */
  BookingSystemPassword = "";

  constructor(data?: PartialMessage<StayableStoreInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.StayableStoreInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "Parking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Latitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 3, name: "Longitude", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 4, name: "AccessInfo", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "RestAPIURL", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "BookingSystemID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "BookingSystemLoginId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "BookingSystemPassword", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StayableStoreInfo {
    return new StayableStoreInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StayableStoreInfo {
    return new StayableStoreInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StayableStoreInfo {
    return new StayableStoreInfo().fromJsonString(jsonString, options);
  }

  static equals(a: StayableStoreInfo | PlainMessage<StayableStoreInfo> | undefined, b: StayableStoreInfo | PlainMessage<StayableStoreInfo> | undefined): boolean {
    return proto3.util.equals(StayableStoreInfo, a, b);
  }
}

/**
 * @generated from message server.admin.StoreIDRequest
 */
export class StoreIDRequest extends Message<StoreIDRequest> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  constructor(data?: PartialMessage<StoreIDRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.StoreIDRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StoreIDRequest {
    return new StoreIDRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StoreIDRequest {
    return new StoreIDRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StoreIDRequest {
    return new StoreIDRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StoreIDRequest | PlainMessage<StoreIDRequest> | undefined, b: StoreIDRequest | PlainMessage<StoreIDRequest> | undefined): boolean {
    return proto3.util.equals(StoreIDRequest, a, b);
  }
}

/**
 * @generated from message server.admin.QRResponse
 */
export class QRResponse extends Message<QRResponse> {
  /**
   * @generated from field: string QRCode = 1;
   */
  QRCode = "";

  constructor(data?: PartialMessage<QRResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.QRResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "QRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QRResponse {
    return new QRResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QRResponse {
    return new QRResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QRResponse {
    return new QRResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QRResponse | PlainMessage<QRResponse> | undefined, b: QRResponse | PlainMessage<QRResponse> | undefined): boolean {
    return proto3.util.equals(QRResponse, a, b);
  }
}

/**
 * @generated from message server.admin.UnlimitQRResponse
 */
export class UnlimitQRResponse extends Message<UnlimitQRResponse> {
  /**
   * @generated from field: string UnlimitQRCode = 1;
   */
  UnlimitQRCode = "";

  constructor(data?: PartialMessage<UnlimitQRResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.admin.UnlimitQRResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "UnlimitQRCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnlimitQRResponse {
    return new UnlimitQRResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnlimitQRResponse {
    return new UnlimitQRResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnlimitQRResponse {
    return new UnlimitQRResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UnlimitQRResponse | PlainMessage<UnlimitQRResponse> | undefined, b: UnlimitQRResponse | PlainMessage<UnlimitQRResponse> | undefined): boolean {
    return proto3.util.equals(UnlimitQRResponse, a, b);
  }
}

