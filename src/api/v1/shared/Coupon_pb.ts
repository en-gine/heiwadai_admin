// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/shared/Coupon.proto (package server.shared, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Store } from "./Store_pb.ts";

/**
 * @generated from enum server.shared.CouponType
 */
export enum CouponType {
  /**
   * @generated from enum value: COUPON_STANDARD = 0;
   */
  COUPON_STANDARD = 0,

  /**
   * @generated from enum value: COUPON_CUSTOM = 1;
   */
  COUPON_CUSTOM = 1,

  /**
   * @generated from enum value: COUPON_BIRTHDAY = 2;
   */
  COUPON_BIRTHDAY = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CouponType)
proto3.util.setEnumType(CouponType, "server.shared.CouponType", [
  { no: 0, name: "COUPON_STANDARD" },
  { no: 1, name: "COUPON_CUSTOM" },
  { no: 2, name: "COUPON_BIRTHDAY" },
]);

/**
 * @generated from message server.shared.Coupon
 */
export class Coupon extends Message<Coupon> {
  /**
   * @generated from field: string ID = 1;
   */
  ID = "";

  /**
   * @generated from field: string Name = 2;
   */
  Name = "";

  /**
   * @generated from field: server.shared.CouponType CouponType = 3;
   */
  CouponType = CouponType.COUPON_STANDARD;

  /**
   * @generated from field: uint32 DiscountAmount = 4;
   */
  DiscountAmount = 0;

  /**
   * time.Time
   *
   * @generated from field: google.protobuf.Timestamp ExpireAt = 5;
   */
  ExpireAt?: Timestamp;

  /**
   * @generated from field: bool IsCombinationable = 6;
   */
  IsCombinationable = false;

  /**
   * @generated from field: repeated string Notices = 7;
   */
  Notices: string[] = [];

  /**
   * @generated from field: repeated server.shared.Store TargetStore = 8;
   */
  TargetStore: Store[] = [];

  /**
   * time.Time  
   *
   * @generated from field: google.protobuf.Timestamp CreateAt = 9;
   */
  CreateAt?: Timestamp;

  constructor(data?: PartialMessage<Coupon>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.shared.Coupon";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "ID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "CouponType", kind: "enum", T: proto3.getEnumType(CouponType) },
    { no: 4, name: "DiscountAmount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "ExpireAt", kind: "message", T: Timestamp },
    { no: 6, name: "IsCombinationable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "Notices", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "TargetStore", kind: "message", T: Store, repeated: true },
    { no: 9, name: "CreateAt", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coupon {
    return new Coupon().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coupon {
    return new Coupon().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coupon {
    return new Coupon().fromJsonString(jsonString, options);
  }

  static equals(a: Coupon | PlainMessage<Coupon> | undefined, b: Coupon | PlainMessage<Coupon> | undefined): boolean {
    return proto3.util.equals(Coupon, a, b);
  }
}

/**
 * @generated from message server.shared.UserAttachedCoupon
 */
export class UserAttachedCoupon extends Message<UserAttachedCoupon> {
  /**
   * @generated from field: string UserID = 1;
   */
  UserID = "";

  /**
   * @generated from field: server.shared.Coupon Coupon = 2;
   */
  Coupon?: Coupon;

  /**
   * time.Time
   *
   * @generated from field: google.protobuf.Timestamp UsedAt = 3;
   */
  UsedAt?: Timestamp;

  constructor(data?: PartialMessage<UserAttachedCoupon>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.shared.UserAttachedCoupon";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "UserID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "Coupon", kind: "message", T: Coupon },
    { no: 3, name: "UsedAt", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAttachedCoupon {
    return new UserAttachedCoupon().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAttachedCoupon {
    return new UserAttachedCoupon().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAttachedCoupon {
    return new UserAttachedCoupon().fromJsonString(jsonString, options);
  }

  static equals(a: UserAttachedCoupon | PlainMessage<UserAttachedCoupon> | undefined, b: UserAttachedCoupon | PlainMessage<UserAttachedCoupon> | undefined): boolean {
    return proto3.util.equals(UserAttachedCoupon, a, b);
  }
}

