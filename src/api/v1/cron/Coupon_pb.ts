// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/cron/Coupon.proto (package server.cron, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message server.cron.AffectedCountResponse
 */
export class AffectedCountResponse extends Message<AffectedCountResponse> {
  /**
   * @generated from field: uint32 AffectedUserCount = 1;
   */
  AffectedUserCount = 0;

  constructor(data?: PartialMessage<AffectedCountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "server.cron.AffectedCountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "AffectedUserCount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AffectedCountResponse {
    return new AffectedCountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AffectedCountResponse {
    return new AffectedCountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AffectedCountResponse {
    return new AffectedCountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AffectedCountResponse | PlainMessage<AffectedCountResponse> | undefined, b: AffectedCountResponse | PlainMessage<AffectedCountResponse> | undefined): boolean {
    return proto3.util.equals(AffectedCountResponse, a, b);
  }
}

