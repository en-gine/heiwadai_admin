// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/user/AnonAuth.proto (package server.user, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { UserRegisterRequest } from "./UserData_pb.ts";
import { Empty, MethodKind } from "@bufbuild/protobuf";
import { AnonTokenResponse, IsUnderRegisterResponse, SetNewPasswordRequest, SignUpRequest, TokenRequest, UserAuthRequest, UserMailRequest, UserMailResponse } from "./AnonAuth_pb.ts";

/**
 * ログイントークン不要の処理
 *
 * @generated from service server.user.AnonAuthController
 */
export const AnonAuthController = {
  typeName: "server.user.AnonAuthController",
  methods: {
    /**
     * 初回ユーザー登録
     *
     * @generated from rpc server.user.AnonAuthController.Register
     */
    register: {
      name: "Register",
      I: UserRegisterRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * ユーザー登録後にメールアドレスの確認が完了し、パスワードを設定する
     *
     * @generated from rpc server.user.AnonAuthController.SignUp
     */
    signUp: {
      name: "SignUp",
      I: SignUpRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * ログイン
     *
     * @generated from rpc server.user.AnonAuthController.SignIn
     */
    signIn: {
      name: "SignIn",
      I: UserAuthRequest,
      O: AnonTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * パスワードリセット用メール送信
     *
     * @generated from rpc server.user.AnonAuthController.ResetPasswordMail
     */
    resetPasswordMail: {
      name: "ResetPasswordMail",
      I: UserMailRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * パスワードリセット(メールリダイレクトからのトークンと共に設定)
     *
     * @generated from rpc server.user.AnonAuthController.SetNewPassword
     */
    setNewPassword: {
      name: "SetNewPassword",
      I: SetNewPasswordRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * トークンを元にユーザーメール取得（パスワード再設定の画面に使用）
     *
     * @generated from rpc server.user.AnonAuthController.GetUserMailByToken
     */
    getUserMailByToken: {
      name: "GetUserMailByToken",
      I: TokenRequest,
      O: UserMailResponse,
      kind: MethodKind.Unary,
    },
    /**
     * メールアドレスによる再招待
     *
     * @generated from rpc server.user.AnonAuthController.IsUnderRegister
     */
    isUnderRegister: {
      name: "IsUnderRegister",
      I: UserMailRequest,
      O: IsUnderRegisterResponse,
      kind: MethodKind.Unary,
    },
    /**
     * 登録して途中離脱したユーザーの再招待
     *
     * @generated from rpc server.user.AnonAuthController.ResendInviteMail
     */
    resendInviteMail: {
      name: "ResendInviteMail",
      I: UserMailRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
    /**
     * 登録して途中離脱したユーザーの削除
     *
     * @generated from rpc server.user.AnonAuthController.DeleteUnderRegisterUser
     */
    deleteUnderRegisterUser: {
      name: "DeleteUnderRegisterUser",
      I: UserMailRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

