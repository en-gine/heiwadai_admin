// @generated by protoc-gen-connect-query v1.1.2 with parameter "target=ts,import_extension=.ts"
// @generated from file v1/user/Book.proto (package server.user, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Empty, MethodKind } from "@bufbuild/protobuf";
import { BookIDRequest, BookMentenanceInfoResponse, BookResponse, BooksResponse, ReserveRequest } from "./Book_pb.ts";

/**
 * 現在の自身の予約状況
 *
 * @generated from rpc server.user.BookController.GetMyBook
 */
export const getMyBook = {
  localName: "getMyBook",
  name: "GetMyBook",
  kind: MethodKind.Unary,
  I: Empty,
  O: BooksResponse,
  service: {
    typeName: "server.user.BookController"
  }
} as const;

/**
 * 現在の自身の特定の予約の詳細を取得
 *
 * @generated from rpc server.user.BookController.GetBookByID
 */
export const getBookByID = {
  localName: "getBookByID",
  name: "GetBookByID",
  kind: MethodKind.Unary,
  I: BookIDRequest,
  O: BookResponse,
  service: {
    typeName: "server.user.BookController"
  }
} as const;

/**
 * 予約のキャンセル
 *
 * @generated from rpc server.user.BookController.Cancel
 */
export const cancel = {
  localName: "cancel",
  name: "Cancel",
  kind: MethodKind.Unary,
  I: BookIDRequest,
  O: Empty,
  service: {
    typeName: "server.user.BookController"
  }
} as const;

/**
 * 予約情報からプランの予約
 *
 * @generated from rpc server.user.BookController.Reserve
 */
export const reserve = {
  localName: "reserve",
  name: "Reserve",
  kind: MethodKind.Unary,
  I: ReserveRequest,
  O: Empty,
  service: {
    typeName: "server.user.BookController"
  }
} as const;

/**
 * 現在メンテナンス中かどうか
 *
 * @generated from rpc server.user.BookController.GetMentenanceInfo
 */
export const getMentenanceInfo = {
  localName: "getMentenanceInfo",
  name: "GetMentenanceInfo",
  kind: MethodKind.Unary,
  I: Empty,
  O: BookMentenanceInfoResponse,
  service: {
    typeName: "server.user.BookController"
  }
} as const;
